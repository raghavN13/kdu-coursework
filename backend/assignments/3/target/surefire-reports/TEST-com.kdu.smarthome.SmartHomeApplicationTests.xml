<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.kdu.smarthome.SmartHomeApplicationTests" time="5.47" tests="26" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/lenovo/miniproject/kdu-coursework/backend/assignments/3/target/test-classes:/home/lenovo/miniproject/kdu-coursework/backend/assignments/3/target/classes:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.2/spring-boot-starter-data-jpa-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.2/spring-boot-starter-aop-3.2.2.jar:/home/lenovo/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.2/spring-boot-starter-jdbc-3.2.2.jar:/home/lenovo/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/lenovo/.m2/repository/org/springframework/spring-jdbc/6.1.3/spring-jdbc-6.1.3.jar:/home/lenovo/.m2/repository/org/hibernate/orm/hibernate-core/6.4.1.Final/hibernate-core-6.4.1.Final.jar:/home/lenovo/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/lenovo/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/lenovo/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/lenovo/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/lenovo/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/home/lenovo/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/lenovo/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/lenovo/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/lenovo/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/lenovo/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/lenovo/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/lenovo/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/lenovo/.m2/repository/org/springframework/data/spring-data-jpa/3.2.2/spring-data-jpa-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/data/spring-data-commons/3.2.2/spring-data-commons-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/spring-orm/6.1.3/spring-orm-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-context/6.1.3/spring-context-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-tx/6.1.3/spring-tx-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-beans/6.1.3/spring-beans-6.1.3.jar:/home/lenovo/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/lenovo/.m2/repository/org/slf4j/slf4j-api/2.0.11/slf4j-api-2.0.11.jar:/home/lenovo/.m2/repository/org/springframework/spring-aspects/6.1.3/spring-aspects-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.2/spring-boot-starter-security-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.2/spring-boot-starter-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot/3.2.2/spring-boot-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.2/spring-boot-autoconfigure-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.2/spring-boot-starter-logging-3.2.2.jar:/home/lenovo/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/home/lenovo/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/home/lenovo/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/lenovo/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/lenovo/.m2/repository/org/slf4j/jul-to-slf4j/2.0.11/jul-to-slf4j-2.0.11.jar:/home/lenovo/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/lenovo/.m2/repository/org/springframework/spring-aop/6.1.3/spring-aop-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-config/6.2.1/spring-security-config-6.2.1.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-web/6.2.1/spring-security-web-6.2.1.jar:/home/lenovo/.m2/repository/org/springframework/spring-expression/6.1.3/spring-expression-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.2/spring-boot-starter-web-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.2/spring-boot-starter-json-3.2.2.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.2/spring-boot-starter-tomcat-3.2.2.jar:/home/lenovo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar:/home/lenovo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar:/home/lenovo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar:/home/lenovo/.m2/repository/org/springframework/spring-web/6.1.3/spring-web-6.1.3.jar:/home/lenovo/.m2/repository/io/micrometer/micrometer-observation/1.12.2/micrometer-observation-1.12.2.jar:/home/lenovo/.m2/repository/io/micrometer/micrometer-commons/1.12.2/micrometer-commons-1.12.2.jar:/home/lenovo/.m2/repository/org/springframework/spring-webmvc/6.1.3/spring-webmvc-6.1.3.jar:/home/lenovo/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/lenovo/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/lenovo/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.2/spring-boot-starter-test-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-test/3.2.2/spring-boot-test-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.2/spring-boot-test-autoconfigure-3.2.2.jar:/home/lenovo/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/lenovo/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/lenovo/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/lenovo/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/lenovo/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/lenovo/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/lenovo/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/lenovo/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/home/lenovo/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/lenovo/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/lenovo/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/lenovo/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/lenovo/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/lenovo/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/lenovo/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/lenovo/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/lenovo/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/lenovo/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/lenovo/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/home/lenovo/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/lenovo/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/lenovo/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/lenovo/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/lenovo/.m2/repository/org/springframework/spring-core/6.1.3/spring-core-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-jcl/6.1.3/spring-jcl-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-test/6.1.3/spring-test-6.1.3.jar:/home/lenovo/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-test/6.2.1/spring-security-test-6.2.1.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-core/6.2.1/spring-security-core-6.2.1.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/home/lenovo/.m2/repository/io/jsonwebtoken/jjwt-api/0.12.3/jjwt-api-0.12.3.jar:/home/lenovo/.m2/repository/io/jsonwebtoken/jjwt-impl/0.12.3/jjwt-impl-0.12.3.jar:/home/lenovo/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.12.3/jjwt-jackson-0.12.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/lenovo/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="Unknown"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/lenovo/miniproject/kdu-coursework/backend/assignments/3/target/surefire/surefirebooter-20240205153739107_3.jar /home/lenovo/miniproject/kdu-coursework/backend/assignments/3/target/surefire 2024-02-05T15-37-39_022-jvmRun1 surefire-20240205153739107_1tmp surefire_0-20240205153739107_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/lenovo/miniproject/kdu-coursework/backend/assignments/3/target/test-classes:/home/lenovo/miniproject/kdu-coursework/backend/assignments/3/target/classes:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.2/spring-boot-starter-data-jpa-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.2/spring-boot-starter-aop-3.2.2.jar:/home/lenovo/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.2/spring-boot-starter-jdbc-3.2.2.jar:/home/lenovo/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/lenovo/.m2/repository/org/springframework/spring-jdbc/6.1.3/spring-jdbc-6.1.3.jar:/home/lenovo/.m2/repository/org/hibernate/orm/hibernate-core/6.4.1.Final/hibernate-core-6.4.1.Final.jar:/home/lenovo/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/lenovo/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/lenovo/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/lenovo/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/lenovo/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/home/lenovo/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/lenovo/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/lenovo/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/lenovo/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/lenovo/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/lenovo/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/lenovo/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/lenovo/.m2/repository/org/springframework/data/spring-data-jpa/3.2.2/spring-data-jpa-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/data/spring-data-commons/3.2.2/spring-data-commons-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/spring-orm/6.1.3/spring-orm-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-context/6.1.3/spring-context-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-tx/6.1.3/spring-tx-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-beans/6.1.3/spring-beans-6.1.3.jar:/home/lenovo/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/lenovo/.m2/repository/org/slf4j/slf4j-api/2.0.11/slf4j-api-2.0.11.jar:/home/lenovo/.m2/repository/org/springframework/spring-aspects/6.1.3/spring-aspects-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.2/spring-boot-starter-security-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.2/spring-boot-starter-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot/3.2.2/spring-boot-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.2/spring-boot-autoconfigure-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.2/spring-boot-starter-logging-3.2.2.jar:/home/lenovo/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/home/lenovo/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/home/lenovo/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/lenovo/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/lenovo/.m2/repository/org/slf4j/jul-to-slf4j/2.0.11/jul-to-slf4j-2.0.11.jar:/home/lenovo/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/lenovo/.m2/repository/org/springframework/spring-aop/6.1.3/spring-aop-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-config/6.2.1/spring-security-config-6.2.1.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-web/6.2.1/spring-security-web-6.2.1.jar:/home/lenovo/.m2/repository/org/springframework/spring-expression/6.1.3/spring-expression-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.2/spring-boot-starter-web-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.2/spring-boot-starter-json-3.2.2.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.2/spring-boot-starter-tomcat-3.2.2.jar:/home/lenovo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar:/home/lenovo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar:/home/lenovo/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar:/home/lenovo/.m2/repository/org/springframework/spring-web/6.1.3/spring-web-6.1.3.jar:/home/lenovo/.m2/repository/io/micrometer/micrometer-observation/1.12.2/micrometer-observation-1.12.2.jar:/home/lenovo/.m2/repository/io/micrometer/micrometer-commons/1.12.2/micrometer-commons-1.12.2.jar:/home/lenovo/.m2/repository/org/springframework/spring-webmvc/6.1.3/spring-webmvc-6.1.3.jar:/home/lenovo/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/lenovo/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/lenovo/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.2/spring-boot-starter-test-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-test/3.2.2/spring-boot-test-3.2.2.jar:/home/lenovo/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.2/spring-boot-test-autoconfigure-3.2.2.jar:/home/lenovo/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/lenovo/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/lenovo/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/lenovo/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/lenovo/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/lenovo/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/lenovo/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/lenovo/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/home/lenovo/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/lenovo/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/lenovo/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/lenovo/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/lenovo/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/lenovo/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/lenovo/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/lenovo/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/lenovo/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/lenovo/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/lenovo/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/home/lenovo/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/lenovo/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/lenovo/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/lenovo/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/lenovo/.m2/repository/org/springframework/spring-core/6.1.3/spring-core-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-jcl/6.1.3/spring-jcl-6.1.3.jar:/home/lenovo/.m2/repository/org/springframework/spring-test/6.1.3/spring-test-6.1.3.jar:/home/lenovo/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-test/6.2.1/spring-security-test-6.2.1.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-core/6.2.1/spring-security-core-6.2.1.jar:/home/lenovo/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/home/lenovo/.m2/repository/io/jsonwebtoken/jjwt-api/0.12.3/jjwt-api-0.12.3.jar:/home/lenovo/.m2/repository/io/jsonwebtoken/jjwt-impl/0.12.3/jjwt-impl-0.12.3.jar:/home/lenovo/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.12.3/jjwt-jackson-0.12.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/lenovo/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/lenovo/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/lenovo"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-10-17"/>
    <property name="java.home" value="/usr/lib/jvm/java-17-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/lenovo/miniproject/kdu-coursework/backend/assignments/3"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/lenovo/miniproject/kdu-coursework/backend/assignments/3/target/surefire/surefirebooter-20240205153739107_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.9+9-Ubuntu-122.04"/>
    <property name="user.name" value="lenovo"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.5.0-15-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/lenovo/.m2/repository"/>
    <property name="java.vendor.url.bug" value="Unknown"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.9"/>
    <property name="user.dir" value="/home/lenovo/miniproject/kdu-coursework/backend/assignments/3"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="267798"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.vm.version" value="17.0.9+9-Ubuntu-122.04"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="runAuthTests" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.943">
    <system-out><![CDATA[15:37:39.763 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.kdu.smarthome.SmartHomeApplicationTests]: SmartHomeApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:37:39.865 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.kdu.smarthome.DemoApplication for test class com.kdu.smarthome.SmartHomeApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2024-02-05T15:37:40.224+05:30  INFO 267798 --- [           main] c.k.smarthome.SmartHomeApplicationTests  : Starting SmartHomeApplicationTests using Java 17.0.9 with PID 267798 (started by lenovo in /home/lenovo/miniproject/kdu-coursework/backend/assignments/3)
2024-02-05T15:37:40.225+05:30  INFO 267798 --- [           main] c.k.smarthome.SmartHomeApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-02-05T15:37:40.776+05:30  INFO 267798 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-02-05T15:37:40.829+05:30  INFO 267798 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
2024-02-05T15:37:41.200+05:30  INFO 267798 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-02-05T15:37:41.239+05:30  INFO 267798 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-02-05T15:37:41.263+05:30  INFO 267798 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-02-05T15:37:41.450+05:30  INFO 267798 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-02-05T15:37:41.470+05:30  INFO 267798 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-02-05T15:37:41.628+05:30  INFO 267798 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-02-05T15:37:41.629+05:30  INFO 267798 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-02-05T15:37:41.649+05:30  WARN 267798 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-02-05T15:37:42.470+05:30  INFO 267798 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    create table devices (
        id bigint generated by default as identity,
        created_at timestamp(6),
        deleted_at timestamp(6),
        device_password varchar(255),
        device_username varchar(255),
        kickston_id varchar(255),
        modified_at timestamp(6),
        room_id bigint,
        primary key (id)
    )
Hibernate: 
    create table houses (
        id bigint generated by default as identity,
        address varchar(255),
        created_at timestamp(6),
        deleted_at timestamp(6),
        houseName varchar(255),
        modified_at timestamp(6),
        primary key (id)
    )
Hibernate: 
    create table inventory (
        kickston_id varchar(255) not null,
        created_at timestamp(6),
        deleted_at timestamp(6),
        device_password varchar(255),
        device_username varchar(255),
        manufacture_date_time timestamp(6),
        manufacture_factory_place varchar(255),
        modified_at timestamp(6),
        primary key (kickston_id)
    )
Hibernate: 
    create table rooms (
        id bigint not null,
        created_at timestamp(6),
        deleted_at timestamp(6),
        modified_at timestamp(6),
        roomName varchar(255),
        house_id bigint,
        primary key (id)
    )
Hibernate: 
    create table user_table (
        id integer generated by default as identity,
        created_at timestamp(6),
        deleted_at timestamp(6),
        email varchar(255),
        firstName varchar(255),
        lastName varchar(255),
        name varchar(255),
        password varchar(255),
        role varchar(255),
        updated_at timestamp(6),
        username varchar(255),
        primary key (id)
    )
Hibernate: 
    create table user_table_house (
        usersList_id integer not null,
        house_id bigint not null
    )
Hibernate: 
    create sequence rooms_SEQ start with 1 increment by 50
Hibernate: 
    alter table if exists devices 
       add constraint FK89ytayyehi53yn26m30x8eg9r 
       foreign key (room_id) 
       references rooms
Hibernate: 
    alter table if exists rooms 
       add constraint FK8le2724arhisppb0tutvundby 
       foreign key (house_id) 
       references houses
Hibernate: 
    alter table if exists user_table_house 
       add constraint FKkwefi1ofud2u5ll9y1rsd7mti 
       foreign key (house_id) 
       references houses
Hibernate: 
    alter table if exists user_table_house 
       add constraint FKpehiu8wdhirc7lyplcdis3h2f 
       foreign key (usersList_id) 
       references user_table
2024-02-05T15:37:42.516+05:30  INFO 267798 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-02-05T15:37:42.565+05:30 DEBUG 267798 --- [           main] .c.JpaMetamodelMappingContextFactoryBean : Initializing JpaMetamodelMappingContext…
2024-02-05T15:37:42.576+05:30 DEBUG 267798 --- [           main] .c.JpaMetamodelMappingContextFactoryBean : Finished initializing JpaMetamodelMappingContext
2024-02-05T15:37:42.739+05:30 DEBUG 267798 --- [           main] o.s.d.jpa.repository.query.NamedQuery    : Looking up named query Admins.findByUsername
2024-02-05T15:37:42.740+05:30 DEBUG 267798 --- [           main] o.s.d.jpa.repository.query.NamedQuery    : Did not find named query Admins.findByUsername
2024-02-05T15:37:42.820+05:30 DEBUG 267798 --- [           main] o.s.d.jpa.repository.query.NamedQuery    : Looking up named query Devices.findByKickstonId
2024-02-05T15:37:42.820+05:30 DEBUG 267798 --- [           main] o.s.d.jpa.repository.query.NamedQuery    : Did not find named query Devices.findByKickstonId
2024-02-05T15:37:42.866+05:30 DEBUG 267798 --- [           main] o.s.d.jpa.repository.query.NamedQuery    : Looking up named query Inventory.findByKickstonId
2024-02-05T15:37:42.866+05:30 DEBUG 267798 --- [           main] o.s.d.jpa.repository.query.NamedQuery    : Did not find named query Inventory.findByKickstonId
2024-02-05T15:37:42.952+05:30  WARN 267798 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-02-05T15:37:43.218+05:30  INFO 267798 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6915351c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ac0cb64, org.springframework.security.web.context.SecurityContextHolderFilter@6a9a6a0c, org.springframework.security.web.header.HeaderWriterFilter@3feb93a, org.springframework.web.filter.CorsFilter@7be3a837, org.springframework.security.web.authentication.logout.LogoutFilter@38d9c9c4, com.kdu.smarthome.filters.TokenValidatorFilter@247d44b4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@62966c9f, com.kdu.smarthome.filters.TokenGeneratorFilter@640028f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77f95e19, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4607cbe2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48b744fd, org.springframework.security.web.access.ExceptionTranslationFilter@4cff38ff, org.springframework.security.web.access.intercept.AuthorizationFilter@1de6689c]
2024-02-05T15:37:43.478+05:30  INFO 267798 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-05T15:37:43.478+05:30  INFO 267798 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-05T15:37:43.479+05:30  INFO 267798 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2024-02-05T15:37:43.497+05:30  INFO 267798 --- [           main] c.k.smarthome.SmartHomeApplicationTests  : Started SmartHomeApplicationTests in 3.507 seconds (process running for 4.341)
Hibernate: 
    insert 
    into
        user_table
        (created_at, deleted_at, email, firstName, lastName, name, password, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
registerUser TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="houseRegisterWithInvalidAuth" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.008">
    <system-out><![CDATA[houseRegisterWithInvalidAuth TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="houseRegisterWithValidRequestData" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.075">
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
Hibernate: 
    insert 
    into
        houses
        (address, created_at, deleted_at, houseName, modified_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    update
        user_table 
    set
        created_at=?,
        deleted_at=?,
        email=?,
        firstName=?,
        lastName=?,
        name=?,
        password=?,
        role=?,
        updated_at=?,
        username=? 
    where
        id=?
Hibernate: 
    select
        h1_0.usersList_id,
        h1_1.id,
        h1_1.address,
        h1_1.created_at,
        h1_1.deleted_at,
        h1_1.houseName,
        h1_1.modified_at 
    from
        user_table_house h1_0 
    join
        houses h1_1 
            on h1_1.id=h1_0.house_id 
    where
        h1_0.usersList_id=?
result
houseRegisterWithValidRequestData TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUnregisteredUserToHouseByAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.023">
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
addUnregisteredUserToHouseByAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUserToHouseByNonAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.169">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        user_table
        (created_at, deleted_at, email, firstName, lastName, name, password, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
registerUser TEST PASSED
Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
addUserToHouseByNonAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUserToHouseByAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.045">
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.deleted_at,
        a1_0.email,
        a1_0.firstName,
        a1_0.lastName,
        a1_0.name,
        a1_0.password,
        a1_0.role,
        a1_0.updated_at,
        a1_0.username 
    from
        user_table a1_0 
    where
        a1_0.username=?
Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0 
    where
        h1_0.id=?
2024-02-05T15:37:44.777+05:30  INFO 267798 --- [           main] o.h.c.spi.AbstractPersistentCollection   : HHH000496: Detaching an uninitialized collection with queued operations from a session: [com.kdu.smarthome.entities.Houses.usersList#1]
addUserToHouseByAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addRoomWithInvalidAuth" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.008">
    <system-out><![CDATA[addRoomWithInvalidAuth TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addRoomByAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.024">
    <system-out><![CDATA[entering here bro 
entering here
Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0 
    where
        h1_0.id=?
Hibernate: 
    select
        next value for rooms_SEQ
Hibernate: 
    insert 
    into
        rooms
        (created_at, deleted_at, house_id, modified_at, roomName, id) 
    values
        (?, ?, ?, ?, ?, ?)
addRoomByAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addRoomForInvalidHouse" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.011">
    <system-out><![CDATA[entering here bro 
entering here
addRoomForInvalidHouse TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="displayAllHouses" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.029">
    <system-out><![CDATA[Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0
Hibernate: 
    select
        ul1_0.house_id,
        ul1_1.id,
        ul1_1.created_at,
        ul1_1.deleted_at,
        ul1_1.email,
        ul1_1.firstName,
        ul1_1.lastName,
        ul1_1.name,
        ul1_1.password,
        ul1_1.role,
        ul1_1.updated_at,
        ul1_1.username 
    from
        user_table_house ul1_0 
    join
        user_table ul1_1 
            on ul1_1.id=ul1_0.usersList_id 
    where
        ul1_0.house_id=?
Hibernate: 
    select
        r1_0.house_id,
        r1_0.id,
        r1_0.created_at,
        r1_0.deleted_at,
        r1_0.modified_at,
        r1_0.roomName 
    from
        rooms r1_0 
    where
        r1_0.house_id=?
Hibernate: 
    select
        dl1_0.room_id,
        dl1_0.id,
        dl1_0.created_at,
        dl1_0.deleted_at,
        dl1_0.device_password,
        dl1_0.device_username,
        dl1_0.kickston_id,
        dl1_0.modified_at 
    from
        devices dl1_0 
    where
        dl1_0.room_id=?
displayAllHouses TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="displayAllHousesWithInvalidAuth" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.005">
    <system-out><![CDATA[displayAllHousesWithInvalidAuth TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="displayAllHousesByNonAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.01">
    <system-out><![CDATA[Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0
Hibernate: 
    select
        ul1_0.house_id,
        ul1_1.id,
        ul1_1.created_at,
        ul1_1.deleted_at,
        ul1_1.email,
        ul1_1.firstName,
        ul1_1.lastName,
        ul1_1.name,
        ul1_1.password,
        ul1_1.role,
        ul1_1.updated_at,
        ul1_1.username 
    from
        user_table_house ul1_0 
    join
        user_table ul1_1 
            on ul1_1.id=ul1_0.usersList_id 
    where
        ul1_0.house_id=?
Hibernate: 
    select
        r1_0.house_id,
        r1_0.id,
        r1_0.created_at,
        r1_0.deleted_at,
        r1_0.modified_at,
        r1_0.roomName 
    from
        rooms r1_0 
    where
        r1_0.house_id=?
Hibernate: 
    select
        dl1_0.room_id,
        dl1_0.id,
        dl1_0.created_at,
        dl1_0.deleted_at,
        dl1_0.device_password,
        dl1_0.device_username,
        dl1_0.kickston_id,
        dl1_0.modified_at 
    from
        devices dl1_0 
    where
        dl1_0.room_id=?
displayAllHousesByNonAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="updateAddressForHouse" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.024">
    <system-out><![CDATA[Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0 
    where
        h1_0.id=?
Hibernate: 
    update
        houses 
    set
        address=?,
        created_at=?,
        deleted_at=?,
        houseName=?,
        modified_at=? 
    where
        id=?
Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0
Hibernate: 
    select
        ul1_0.house_id,
        ul1_1.id,
        ul1_1.created_at,
        ul1_1.deleted_at,
        ul1_1.email,
        ul1_1.firstName,
        ul1_1.lastName,
        ul1_1.name,
        ul1_1.password,
        ul1_1.role,
        ul1_1.updated_at,
        ul1_1.username 
    from
        user_table_house ul1_0 
    join
        user_table ul1_1 
            on ul1_1.id=ul1_0.usersList_id 
    where
        ul1_0.house_id=?
Hibernate: 
    select
        r1_0.house_id,
        r1_0.id,
        r1_0.created_at,
        r1_0.deleted_at,
        r1_0.modified_at,
        r1_0.roomName 
    from
        rooms r1_0 
    where
        r1_0.house_id=?
Hibernate: 
    select
        dl1_0.room_id,
        dl1_0.id,
        dl1_0.created_at,
        dl1_0.deleted_at,
        dl1_0.device_password,
        dl1_0.device_username,
        dl1_0.kickston_id,
        dl1_0.modified_at 
    from
        devices dl1_0 
    where
        dl1_0.room_id=?
displayAllHouses TEST PASSED
updateAddressForHouse TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="updateAddressForInvalidHouse" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.017">
    <system-out><![CDATA[Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0
Hibernate: 
    select
        ul1_0.house_id,
        ul1_1.id,
        ul1_1.created_at,
        ul1_1.deleted_at,
        ul1_1.email,
        ul1_1.firstName,
        ul1_1.lastName,
        ul1_1.name,
        ul1_1.password,
        ul1_1.role,
        ul1_1.updated_at,
        ul1_1.username 
    from
        user_table_house ul1_0 
    join
        user_table ul1_1 
            on ul1_1.id=ul1_0.usersList_id 
    where
        ul1_0.house_id=?
Hibernate: 
    select
        r1_0.house_id,
        r1_0.id,
        r1_0.created_at,
        r1_0.deleted_at,
        r1_0.modified_at,
        r1_0.roomName 
    from
        rooms r1_0 
    where
        r1_0.house_id=?
Hibernate: 
    select
        dl1_0.room_id,
        dl1_0.id,
        dl1_0.created_at,
        dl1_0.deleted_at,
        dl1_0.device_password,
        dl1_0.device_username,
        dl1_0.kickston_id,
        dl1_0.modified_at 
    from
        devices dl1_0 
    where
        dl1_0.room_id=?
displayAllHouses TEST PASSED
updateAddressForInvalidHouse TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addDeviceToInventory" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.017">
    <system-out><![CDATA[Hibernate: 
    select
        i1_0.kickston_id,
        i1_0.created_at,
        i1_0.deleted_at,
        i1_0.device_password,
        i1_0.device_username,
        i1_0.manufacture_date_time,
        i1_0.manufacture_factory_place,
        i1_0.modified_at 
    from
        inventory i1_0 
    where
        i1_0.kickston_id=?
Hibernate: 
    insert 
    into
        inventory
        (created_at, deleted_at, device_password, device_username, manufacture_date_time, manufacture_factory_place, modified_at, kickston_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
addDeviceToInventory TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="displayInventory" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.014">
    <system-out><![CDATA[Hibernate: 
    select
        i1_0.kickston_id,
        i1_0.created_at,
        i1_0.deleted_at,
        i1_0.device_password,
        i1_0.device_username,
        i1_0.manufacture_date_time,
        i1_0.manufacture_factory_place,
        i1_0.modified_at 
    from
        inventory i1_0
displayInventory TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="registerUnavailableDevice" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.013">
    <system-out><![CDATA[Hibernate: 
    select
        i1_0.kickston_id,
        i1_0.created_at,
        i1_0.deleted_at,
        i1_0.device_password,
        i1_0.device_username,
        i1_0.manufacture_date_time,
        i1_0.manufacture_factory_place,
        i1_0.modified_at 
    from
        inventory i1_0 
    where
        i1_0.kickston_id=?
registerUnavailableDevice TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="deviceRegisterWithInvalidCredentials" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.009">
    <system-out><![CDATA[Hibernate: 
    select
        i1_0.kickston_id,
        i1_0.created_at,
        i1_0.deleted_at,
        i1_0.device_password,
        i1_0.device_username,
        i1_0.manufacture_date_time,
        i1_0.manufacture_factory_place,
        i1_0.modified_at 
    from
        inventory i1_0 
    where
        i1_0.kickston_id=?
deviceRegisterWithInvalidCredentials TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="deviceRegisterByNonAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.009">
    <system-out><![CDATA[Hibernate: 
    select
        i1_0.kickston_id,
        i1_0.created_at,
        i1_0.deleted_at,
        i1_0.device_password,
        i1_0.device_username,
        i1_0.manufacture_date_time,
        i1_0.manufacture_factory_place,
        i1_0.modified_at 
    from
        inventory i1_0 
    where
        i1_0.kickston_id=?
deviceRegisterByNonAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="deviceRegisterWithValidRequestData" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.012">
    <system-out><![CDATA[Hibernate: 
    select
        i1_0.kickston_id,
        i1_0.created_at,
        i1_0.deleted_at,
        i1_0.device_password,
        i1_0.device_username,
        i1_0.manufacture_date_time,
        i1_0.manufacture_factory_place,
        i1_0.modified_at 
    from
        inventory i1_0 
    where
        i1_0.kickston_id=?
Hibernate: 
    insert 
    into
        devices
        (created_at, deleted_at, device_password, device_username, kickston_id, modified_at, room_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
deviceRegisterWithValidRequestData TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUnavailableDevice" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.014">
    <system-out><![CDATA[But Surely here
Hibernate: 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.deleted_at,
        d1_0.device_password,
        d1_0.device_username,
        d1_0.kickston_id,
        d1_0.modified_at,
        d1_0.room_id 
    from
        devices d1_0 
    where
        d1_0.kickston_id=?
Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0 
    where
        h1_0.id=?
addUnavailableDevice TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addDeviceToInvalidHouse" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.008">
    <system-out><![CDATA[entering here 
addDeviceToInvalidHouse TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addDeviceToInvalidRoom" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.007">
    <system-out><![CDATA[entering here 
addDeviceToInvalidRoom TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUnregisteredDevice" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.016">
    <system-out><![CDATA[Hibernate: 
    select
        i1_0.kickston_id,
        i1_0.created_at,
        i1_0.deleted_at,
        i1_0.device_password,
        i1_0.device_username,
        i1_0.manufacture_date_time,
        i1_0.manufacture_factory_place,
        i1_0.modified_at 
    from
        inventory i1_0 
    where
        i1_0.kickston_id=?
Hibernate: 
    insert 
    into
        inventory
        (created_at, deleted_at, device_password, device_username, manufacture_date_time, manufacture_factory_place, modified_at, kickston_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
addDeviceToInventory TEST PASSED
But Surely here
Hibernate: 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.deleted_at,
        d1_0.device_password,
        d1_0.device_username,
        d1_0.kickston_id,
        d1_0.modified_at,
        d1_0.room_id 
    from
        devices d1_0 
    where
        d1_0.kickston_id=?
Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0 
    where
        h1_0.id=?
addUnregisteredDevice TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addDeviceWithValidRequestData" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.014">
    <system-out><![CDATA[But Surely here
Hibernate: 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.deleted_at,
        d1_0.device_password,
        d1_0.device_username,
        d1_0.kickston_id,
        d1_0.modified_at,
        d1_0.room_id 
    from
        devices d1_0 
    where
        d1_0.kickston_id=?
Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0 
    where
        h1_0.id=?
Hibernate: 
    select
        r1_0.house_id,
        r1_0.id,
        r1_0.created_at,
        r1_0.deleted_at,
        r1_0.modified_at,
        r1_0.roomName 
    from
        rooms r1_0 
    where
        r1_0.house_id=?
Hibernate: 
    update
        devices 
    set
        created_at=?,
        deleted_at=?,
        device_password=?,
        device_username=?,
        kickston_id=?,
        modified_at=?,
        room_id=? 
    where
        id=?
addDeviceWithValidRequestData TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="listRoomsAndDevices" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.016">
    <system-out><![CDATA[{registeredHouses={user1={houseName=house1, rooms=[{id=1, roomName=room1}], address=New Street 999, id=1, users=[user1, user2], adminUsers=[user1]}}, registeredUsers={user1={userDetails={firstName=John, lastName=Doe, password=defaultPassword, name=John Doe, emailId=john.doe@example.com, username=user1}, token=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcxMjc2NjQsImV4cCI6MTcwNzE1NzY2NH0.z7bBL_eiNBgWc2yzm1ckj4he0iKy1gCNirzINK5mnCo}, user2={userDetails={firstName=Jin, lastName=Seok, password=defaultPassword2, name=Jin Seok, emailId=jin@example.com, username=user2}, token=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIyIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcxMjc2NjQsImV4cCI6MTcwNzE1NzY2NH0.LmBa1gPvOJEhXv5zkHOHLUbYskoSIsCN7rHZ02-8WPU}}, registeredDevices={111={kickstoneId=111, houseId=1, user=user1, roomId=1, devicePassword=pwd}}, inventory={111={devicePassword=pwd, kickstoneId=111, manufactureDateTime=2024-02-05T15:37:44.933913755, manufactureFactoryPlace=BLR}, 222={devicePassword=pwd2, kickstoneId=222, manufactureDateTime=2024-02-05T15:37:45.037907818, manufactureFactoryPlace=BLR}}}
Hibernate: 
    select
        h1_0.id,
        h1_0.address,
        h1_0.created_at,
        h1_0.deleted_at,
        h1_0.houseName,
        h1_0.modified_at 
    from
        houses h1_0 
    where
        h1_0.id=?
Hibernate: 
    select
        r1_0.house_id,
        r1_0.id,
        r1_0.created_at,
        r1_0.deleted_at,
        r1_0.modified_at,
        r1_0.roomName 
    from
        rooms r1_0 
    where
        r1_0.house_id=?
Hibernate: 
    select
        ul1_0.house_id,
        ul1_1.id,
        ul1_1.created_at,
        ul1_1.deleted_at,
        ul1_1.email,
        ul1_1.firstName,
        ul1_1.lastName,
        ul1_1.name,
        ul1_1.password,
        ul1_1.role,
        ul1_1.updated_at,
        ul1_1.username 
    from
        user_table_house ul1_0 
    join
        user_table ul1_1 
            on ul1_1.id=ul1_0.usersList_id 
    where
        ul1_0.house_id=?
Hibernate: 
    select
        dl1_0.room_id,
        dl1_0.id,
        dl1_0.created_at,
        dl1_0.deleted_at,
        dl1_0.device_password,
        dl1_0.device_username,
        dl1_0.kickston_id,
        dl1_0.modified_at 
    from
        devices dl1_0 
    where
        dl1_0.room_id=?
listRoomsAndDevices TEST PASSED
]]></system-out>
  </testcase>
</testsuite>